// Exemplo web para testar o servidor
// Este arquivo demonstra funcionalidades web da Stack Extensão

imprimir("🌐 Stack Extensão - Demo Web!")
imprimir("Iniciando servidor web...")

// Componente web simples
componente CalculadoraWeb {
    variavel display = "0"
    variavel primeiroNumero = nulo
    variavel operacao = nulo
    variavel aguardandoSegundoNumero = falso
    
    funcao numero(num) {
        se (this.aguardandoSegundoNumero) {
            this.display = num.toString()
            this.aguardandoSegundoNumero = falso
        } senao {
            this.display = this.display igual "0" ? num.toString() : this.display + num.toString()
        }
    }
    
    funcao operacao(op) {
        this.primeiroNumero = parseFloat(this.display)
        this.operacao = op
        this.aguardandoSegundoNumero = verdadeiro
    }
    
    funcao igual() {
        se (this.primeiroNumero igual nulo ou this.operacao igual nulo) {
            retornar
        }
        
        variavel segundoNumero = parseFloat(this.display)
        variavel resultado = 0
        
        se (this.operacao igual "mais") {
            resultado = this.primeiroNumero + segundoNumero
        } senao se (this.operacao igual "menos") {
            resultado = this.primeiroNumero - segundoNumero
        } senao se (this.operacao igual "vezes") {
            resultado = this.primeiroNumero * segundoNumero
        } senao se (this.operacao igual "dividido") {
            se (segundoNumero diferente 0) {
                resultado = this.primeiroNumero / segundoNumero
            } senao {
                this.display = "Erro: Divisão por zero"
                retornar
            }
        }
        
        this.display = resultado.toString()
        this.primeiroNumero = nulo
        this.operacao = nulo
        this.aguardandoSegundoNumero = falso
    }
    
    funcao limpar() {
        this.display = "0"
        this.primeiroNumero = nulo
        this.operacao = nulo
        this.aguardandoSegundoNumero = falso
    }
    
    funcao render() {
        retornar `
            <div class="calculadora">
                <div class="display">${this.display}</div>
                <div class="botoes">
                    <button onclick="this.limpar()">C</button>
                    <button onclick="this.operacao('dividido')">/</button>
                    <button onclick="this.operacao('vezes')">×</button>
                    <button onclick="this.operacao('menos')">-</button>
                    
                    <button onclick="this.numero(7)">7</button>
                    <button onclick="this.numero(8)">8</button>
                    <button onclick="this.numero(9)">9</button>
                    <button onclick="this.operacao('mais')">+</button>
                    
                    <button onclick="this.numero(4)">4</button>
                    <button onclick="this.numero(5)">5</button>
                    <button onclick="this.numero(6)">6</button>
                    <button onclick="this.igual()" class="igual">=</button>
                    
                    <button onclick="this.numero(1)">1</button>
                    <button onclick="this.numero(2)">2</button>
                    <button onclick="this.numero(3)">3</button>
                    
                    <button onclick="this.numero(0)" class="zero">0</button>
                    <button onclick="this.numero('.')">.</button>
                </div>
            </div>
        `
    }
}

// Componente de lista de tarefas
componente ListaTarefas {
    variavel tarefas = []
    variavel novaTarefa = ""
    
    funcao adicionarTarefa() {
        se (this.novaTarefa.trim() diferente "") {
            variavel tarefa = {
                id: Date.now(),
                texto: this.novaTarefa,
                concluida: falso,
                data: new Date().toLocaleDateString()
            }
            
            this.tarefas.push(tarefa)
            this.novaTarefa = ""
        }
    }
    
    funcao removerTarefa(id) {
        this.tarefas = this.tarefas.filter(t => t.id diferente id)
    }
    
    funcao toggleTarefa(id) {
        para (variavel i = 0; i menor this.tarefas.length; i = i mais 1) {
            se (this.tarefas[i].id igual id) {
                this.tarefas[i].concluida = nao this.tarefas[i].concluida
                retornar
            }
        }
    }
    
    funcao render() {
        variavel html = `
            <div class="lista-tarefas">
                <h3>📝 Lista de Tarefas</h3>
                <div class="adicionar">
                    <input type="text" 
                           value="${this.novaTarefa}" 
                           oninput="this.novaTarefa = this.value"
                           placeholder="Nova tarefa...">
                    <button onclick="this.adicionarTarefa()">Adicionar</button>
                </div>
                <ul class="tarefas">
        `
        
        para (variavel i = 0; i menor this.tarefas.length; i = i mais 1) {
            variavel tarefa = this.tarefas[i]
            variavel classe = tarefa.concluida ? "concluida" : ""
            
            html += `
                <li class="${classe}">
                    <input type="checkbox" 
                           ${tarefa.concluida ? "checked" : ""}
                           onchange="this.toggleTarefa(${tarefa.id})">
                    <span>${tarefa.texto}</span>
                    <small>${tarefa.data}</small>
                    <button onclick="this.removerTarefa(${tarefa.id})">×</button>
                </li>
            `
        }
        
        html += `
                </ul>
                <div class="stats">
                    Total: ${this.tarefas.length} | 
                    Concluídas: ${this.tarefas.filter(t => t.concluida).length} | 
                    Pendentes: ${this.tarefas.filter(t => nao t.concluida).length}
                </div>
            </div>
        `
        
        retornar html
    }
}

// Componente principal da aplicação
componente AppPrincipal {
    variavel pagina = "home"
    variavel calculadora = novo CalculadoraWeb()
    variavel listaTarefas = novo ListaTarefas()
    
    funcao navegar(pagina) {
        this.pagina = pagina
    }
    
    funcao render() {
        variavel conteudo = ""
        
        se (this.pagina igual "home") {
            conteudo = `
                <div class="home">
                    <h1>🚀 Stack Extensão - Demo Web</h1>
                    <p>Bem-vindo à demonstração das funcionalidades web da Stack Extensão!</p>
                    
                    <div class="funcionalidades">
                        <h3>✨ Funcionalidades Demonstradas:</h3>
                        <ul>
                            <li>🌍 Código bilíngue (português + inglês)</li>
                            <li>🧮 Operadores matemáticos em português</li>
                            <li>🤖 IA integrada para desenvolvimento</li>
                            <li>🌐 Componentes web reativos</li>
                            <li>📱 Interface responsiva</li>
                            <li>🔄 Hot-reload automático</li>
                        </ul>
                    </div>
                    
                    <div class="botoes-navegacao">
                        <button onclick="this.navegar('calculadora')" class="btn-primary">
                            🧮 Calculadora
                        </button>
                        <button onclick="this.navegar('tarefas')" class="btn-primary">
                            📝 Lista de Tarefas
                        </button>
                    </div>
                </div>
            `
        } senao se (this.pagina igual "calculadora") {
            conteudo = `
                <div class="calculadora-page">
                    <h2>🧮 Calculadora Stack Extensão</h2>
                    <p>Calculadora com operadores em português!</p>
                    ${this.calculadora.render()}
                    <button onclick="this.navegar('home')" class="btn-secondary">
                        ← Voltar
                    </button>
                </div>
            `
        } senao se (this.pagina igual "tarefas") {
            conteudo = `
                <div class="tarefas-page">
                    <h2>📝 Lista de Tarefas</h2>
                    <p>Gerencie suas tarefas com Stack Extensão!</p>
                    ${this.listaTarefas.render()}
                    <button onclick="this.navegar('home')" class="btn-secondary">
                        ← Voltar
                    </button>
                </div>
            `
        }
        
        retornar `
            <!DOCTYPE html>
            <html lang="pt-BR">
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>Stack Extensão - Demo Web</title>
                <style>
                    * { margin: 0; padding: 0; box-sizing: border-box; }
                    
                    body {
                        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                        min-height: 100vh;
                        color: #333;
                    }
                    
                    .container {
                        max-width: 1200px;
                        margin: 0 auto;
                        padding: 20px;
                    }
                    
                    .home {
                        background: white;
                        border-radius: 15px;
                        padding: 40px;
                        box-shadow: 0 10px 30px rgba(0,0,0,0.2);
                        text-align: center;
                    }
                    
                    .home h1 {
                        color: #667eea;
                        margin-bottom: 20px;
                        font-size: 2.5em;
                    }
                    
                    .funcionalidades {
                        text-align: left;
                        margin: 30px 0;
                        background: #f8f9fa;
                        padding: 20px;
                        border-radius: 10px;
                    }
                    
                    .funcionalidades ul {
                        list-style: none;
                        padding: 0;
                    }
                    
                    .funcionalidades li {
                        padding: 8px 0;
                        font-size: 1.1em;
                    }
                    
                    .botoes-navegacao {
                        margin-top: 30px;
                    }
                    
                    .btn-primary, .btn-secondary {
                        background: #667eea;
                        color: white;
                        border: none;
                        padding: 15px 30px;
                        margin: 10px;
                        border-radius: 25px;
                        font-size: 1.1em;
                        cursor: pointer;
                        transition: all 0.3s ease;
                    }
                    
                    .btn-primary:hover, .btn-secondary:hover {
                        background: #5a6fd8;
                        transform: translateY(-2px);
                    }
                    
                    .btn-secondary {
                        background: #6c757d;
                    }
                    
                    .calculadora-page, .tarefas-page {
                        background: white;
                        border-radius: 15px;
                        padding: 40px;
                        box-shadow: 0 10px 30px rgba(0,0,0,0.2);
                    }
                    
                    .calculadora {
                        max-width: 300px;
                        margin: 20px auto;
                        background: #f8f9fa;
                        border-radius: 10px;
                        padding: 20px;
                    }
                    
                    .display {
                        background: #333;
                        color: white;
                        padding: 20px;
                        text-align: right;
                        font-size: 2em;
                        border-radius: 5px;
                        margin-bottom: 20px;
                        min-height: 60px;
                    }
                    
                    .botoes {
                        display: grid;
                        grid-template-columns: repeat(4, 1fr);
                        gap: 10px;
                    }
                    
                    .botoes button {
                        padding: 20px;
                        font-size: 1.2em;
                        border: none;
                        border-radius: 5px;
                        cursor: pointer;
                        background: #e9ecef;
                        transition: all 0.2s ease;
                    }
                    
                    .botoes button:hover {
                        background: #dee2e6;
                    }
                    
                    .botoes button.igual {
                        background: #667eea;
                        color: white;
                    }
                    
                    .botoes button.zero {
                        grid-column: span 2;
                    }
                    
                    .lista-tarefas {
                        max-width: 600px;
                        margin: 20px auto;
                    }
                    
                    .adicionar {
                        display: flex;
                        gap: 10px;
                        margin-bottom: 20px;
                    }
                    
                    .adicionar input {
                        flex: 1;
                        padding: 10px;
                        border: 1px solid #ddd;
                        border-radius: 5px;
                        font-size: 1em;
                    }
                    
                    .adicionar button {
                        padding: 10px 20px;
                        background: #28a745;
                        color: white;
                        border: none;
                        border-radius: 5px;
                        cursor: pointer;
                    }
                    
                    .tarefas {
                        list-style: none;
                        padding: 0;
                    }
                    
                    .tarefas li {
                        background: #f8f9fa;
                        margin: 10px 0;
                        padding: 15px;
                        border-radius: 5px;
                        display: flex;
                        align-items: center;
                        gap: 10px;
                    }
                    
                    .tarefas li.concluida {
                        opacity: 0.6;
                        text-decoration: line-through;
                    }
                    
                    .tarefas li button {
                        background: #dc3545;
                        color: white;
                        border: none;
                        border-radius: 50%;
                        width: 30px;
                        height: 30px;
                        cursor: pointer;
                        margin-left: auto;
                    }
                    
                    .stats {
                        text-align: center;
                        margin-top: 20px;
                        padding: 10px;
                        background: #e9ecef;
                        border-radius: 5px;
                        font-weight: bold;
                    }
                </style>
            </head>
            <body>
                <div class="container">
                    ${conteudo}
                </div>
            </body>
            </html>
        `
    }
}

// Inicializar aplicação
variavel app = novo AppPrincipal()
app.render()

imprimir("✅ Aplicação web inicializada!")
imprimir("🌐 Acesse http://localhost:3000 para ver a demo")
imprimir("🔄 Hot-reload ativado - mudanças serão aplicadas automaticamente")